helm:
  # It is possible to specify the keys and values as gotpl strings for advanced templating needs.
  # Most of the functions from sprig templating library is available.
  # The template context has following keys.
  # `.ClusterValues` are retrieved from target cluster's `spec.templateValues`
  # `.ClusterLabels` and `.ClusterAnnotations` are the labels and annoations in the cluster resource.
  # `.ClusterName` as the fleet's cluster resource name.
  # `.ClusterNamespace` as the namespace which the cluster resource exists.
  values:
    name: name-${ .ClusterName }
    namespace: ${ .ClusterNamespace }
    clusterLabels: ${ .ClusterLabels | toJson }
    clusterValues: ${ .ClusterValues | toJson }
    policy: ${ index .ClusterValues "policy" }
    image:
      # clusterValues is a Dictionary
      pullPolicy: ${ if hasKey .ClusterValues "policy" }${.ClusterValues.policy}${else}"IfNotPresent"${end}
      # clusterLabels is a Dictionary
      repository: ${if index .ClusterLabels "repository"}${.ClusterLabels.repository}${else}rancher/mirrored-library-busybox${end}
    # generate a list, json is a subset of yaml
    hostnames: ${ list "one" "two" "three" | uniq | toJson }
    annotations:
      app: fleet
      more: data
    replicaCount: 1
